package com.company.petro_coin.petro_coin.petro_coin.user.generated;

import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.getInt;

import java.sql.ResultSet;
import java.sql.SQLException;

import com.company.petro_coin.petro_coin.petro_coin.user.User;
import com.company.petro_coin.petro_coin.petro_coin.user.UserImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

/**
 * The generated Sql Adapter for a
 * {@link com.company.petro_coin.petro_coin.petro_coin.user.User} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserSqlAdapter implements SqlAdapter<User> {

	private final TableIdentifier<User> tableIdentifier;

	protected GeneratedUserSqlAdapter() {
		this.tableIdentifier = TableIdentifier.of("petro-coin", "petro-coin", "user");
	}

	protected User apply(ResultSet resultSet, int offset) throws SQLException {
		return createEntity().setId(resultSet.getInt(1 + offset)).setFullName(resultSet.getString(2 + offset))
				.setPassword(resultSet.getString(3 + offset)).setEmail(resultSet.getString(4 + offset))
				.setMobile(resultSet.getString(5 + offset)).setNation(resultSet.getString(6 + offset))
				.setIsActive(getInt(resultSet, 7 + offset)).setIsDelete(getInt(resultSet, 8 + offset))
				.setBankCode(resultSet.getString(9 + offset));
	}

	protected UserImpl createEntity() {
		return new UserImpl();
	}

	@Override
	public TableIdentifier<User> identifier() {
		return tableIdentifier;
	}

	@Override
	public SqlFunction<ResultSet, User> entityMapper() {
		return entityMapper(0);
	}

	@Override
	public SqlFunction<ResultSet, User> entityMapper(int offset) {
		return rs -> apply(rs, offset);
	}
}